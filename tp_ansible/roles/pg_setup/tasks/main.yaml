- name: Démarrer et activer le service postgresql
  ansible.builtin.service:
    name: postgresql
    state: started
    enabled: yes
  become: yes
  become_user: root

- name: Créer la base de données 'postgres'
  community.postgresql.postgresql_db:
    name: "{{ postgresql_db_name }}"
  become: yes
  become_user: postgres

- name: Créer l’utilisateur 'postgres' avec mot de passe
  community.postgresql.postgresql_user:
    name: "{{ postgresql_user }}"
    password: "{{ postgresql_password }}"
    state: present
  become: yes
  become_user: postgres

- name: Accorder tous les privilèges sur la DB 'postgres' à l’utilisateur 'postgres'
  community.postgresql.postgresql_privs:
    type: database
    db: "{{ postgresql_db_name }}"
    roles: "{{ postgresql_user }}"
    grant_option: no
    privs: all
  become: yes
  become_user: postgres

- name: Récupérer le chemin de pg_hba.conf
  community.postgresql.postgresql_query:
    query: "SHOW hba_file;"
  register: hba_file_result
  become: yes
  become_user: postgres

- name: Afficher le chemin de pg_hba.conf
  ansible.builtin.debug:
    var: hba_file_result

- name: Configurer l’accès client (pg_hba.conf)
  community.postgresql.postgresql_pg_hba:
    dest: "{{ hba_file_result.query_result[0].hba_file }}"
    contype: host
    databases: all
    users: all
    address: all
    method: md5
  notify: Redémarrer PostgreSQL
  become: yes
  become_user: postgres

- name: Autoriser l’écoute sur toutes les interfaces
  community.postgresql.postgresql_set:
    name: listen_addresses
    value: "0.0.0.0"
  notify: Redémarrer PostgreSQL
  become: yes
  become_user: postgres